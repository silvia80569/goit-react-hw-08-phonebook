{"version":3,"file":"static/js/896.5e9f8b9a.chunk.js","mappings":"iRAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EAEpDC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,E,mBCuFzD,EA7EqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXJ,GAAYK,EAAAA,EAAAA,IAAYN,GACxBF,GAAWQ,EAAAA,EAAAA,IAAYV,GACvBO,GAAQG,EAAAA,EAAAA,IAAYJ,GAE1BK,GAAoCC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,OAAQ,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA/DM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAwCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IACpCG,EAAAA,EAAAA,YAAU,WACRf,GAASgB,EAAAA,EAAAA,MACX,GAAG,CAAChB,IAgBJ,OAAIH,GACKoB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wBAERnB,GACKoB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,2BAAyBnB,MAInCoB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAF,SAAA,EACFD,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,GAAG,KAAKC,KAAK,KAAKC,GAAI,EAAEN,SAAC,cAGlCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACI,GAAI,EAAEN,SAAA,EACTD,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CACJC,YAAY,OACZC,MAAOlB,EAAWJ,KAClBuB,SAAU,SAAAC,GAAC,OAAInB,GAAaoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIrB,GAAU,IAAEJ,KAAMwB,EAAEE,OAAOJ,QAAQ,EACrEH,GAAI,KAENP,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CACJC,YAAY,SACZC,MAAOlB,EAAWH,OAClBsB,SAAU,SAAAC,GAAC,OACTnB,GAAaoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIrB,GAAU,IAAEH,OAAQuB,EAAEE,OAAOJ,QAAQ,EAE1DH,GAAI,KAENP,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACC,QAzCW,WAClBxB,EAAWJ,MAASI,EAAWH,QAIpCN,GAASkC,EAAAA,EAAAA,IAAWzB,IACpBC,EAAc,CAAEL,KAAM,GAAIC,OAAQ,KAClCQ,EAAgB,KALdA,EAAgB,qCAMpB,EAiCyCqB,YAAY,OAAMjB,SAAC,gBAGrDL,IAAgBI,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CAACC,MAAM,UAASnB,SAAEL,QAE1CI,EAAAA,EAAAA,KAAA,MAAAC,SACGxB,EAAS4C,KAAI,SAAAC,GAAO,OACnBpB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGqB,EAAQlC,KAAK,KAAGkC,EAAQjC,QACzBW,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CACLC,QAAS,kBAzCOO,EAyCmBD,EAAQC,QAxCrDxC,GAASyC,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CAyC8B,EAC9CE,GAAI,EACJP,YAAY,MAAKjB,SAClB,aANMqB,EAAQC,GASZ,QAKf,C,4OCzFaG,EAAA,0DAAAC,EAAA,6BAUbC,GAA0DC,EAAAA,EAAAA,GAAc,CACtEzC,KAAM,2BACNQ,aAAc,kHACdkC,GAAAvC,EAAAA,EAAAA,GAAAqC,EAAA,GAHKG,EAAyBD,EAAA,GAAEE,EAAoBF,EAAA,GAItDG,GAAqDJ,EAAAA,EAAAA,GAAc,CACjEK,QAAQ,EACR9C,KAAM,uBACN+C,GAAA5C,EAAAA,EAAAA,GAAA0C,EAAA,GAHKG,EAAmBD,EAAA,GAAEE,EAAqBF,EAAA,GAkHjD,IAAMG,GAAcC,EAAAA,EAAAA,IAClB,SAAsBC,EAAOC,GAC3B,IAAMC,GAASC,EAAAA,EAAAA,GAAoB,OAAQH,GAE3CI,EAlHJ,SAAgCJ,GAC9B,IACMK,EAMFL,EANFjB,GACAuB,EAKEN,EALFM,WACAC,EAIEP,EAJFO,UACAC,EAGER,EAHFQ,WACAC,EAEET,EAFFS,WACGC,GAASC,EAAAA,EAAAA,GACVX,EAAKd,GACH0B,GAAOC,EAAAA,EAAAA,SACP9B,EAAKsB,GAAU,SAAJS,OAAaF,GACxBG,EAAU,GAAHD,OAAM/B,EAAE,UACfiC,EAAa,GAAHF,OAAM/B,EAAE,aAClBkC,EAAa,GAAHH,OAAM/B,EAAE,aACxBrC,GAA8CC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAtDwE,EAAepE,EAAA,GAAEqE,EAAkBrE,EAAA,GAC1CI,GAAsCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CkE,EAAWjE,EAAA,GAAEkE,EAAclE,EAAA,GAClCmE,GAA8B3E,EAAAA,EAAAA,WAAS,GAAM4E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAQF,EAAA,GACpBG,GAAmBC,EAAAA,EAAAA,cACvB,eAACC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAYH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAAxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC/BU,GAAIkC,GACDW,GAAM,IAKT3B,KAAKgC,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GAELb,GAAe,EACjB,KAAE,GAEJ,CAACJ,IAEGkB,GAAgBR,EAAAA,EAAAA,cACpB,eAACC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAYH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAAxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BuD,GAAM,IACT3B,IAAK+B,EACL,cAAcI,EAAAA,EAAAA,GAASZ,GACvB,iBAAiBY,EAAAA,EAAAA,GAAS5B,GAC1B,gBAAgB4B,EAAAA,EAAAA,GAAS7B,GACzB,iBAAiB6B,EAAAA,EAAAA,GAAS3B,GAC1B1B,QAAkB,IAAd6C,EAAO7C,GAAgB6C,EAAO7C,GAAKgC,EACvCsB,aAA4B,IAAnBT,EAAOS,QAAqBT,EAAOS,QAAUtD,GAAE,GAE1D,CAACA,EAAIyB,EAAYgB,EAAWjB,EAAWE,EAAYM,IAE/CuB,GAAuBX,EAAAA,EAAAA,cAC3B,eAACC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAYH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAAxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC/BU,GAAIiC,GACDY,GAAM,IAKT3B,KAAKgC,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GAELf,GAAmB,EACrB,IACA,YAAa,UAAQ,GAEvB,CAACH,IAEGuB,GAAeZ,EAAAA,EAAAA,cACnB,eAACC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAYH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAAxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BuD,GACAlB,GAAS,IACZT,IAAK+B,EACLQ,KAAM,QACN,cAAcJ,EAAAA,EAAAA,GAASZ,GACvB,iBAAiBY,EAAAA,EAAAA,GAAS5B,GAC1B,gBAAgB4B,EAAAA,EAAAA,GAAS7B,GACzB,iBAAiB6B,EAAAA,EAAAA,GAAS3B,IAAW,GAEvC,CAACC,EAAWF,EAAYgB,EAAWjB,EAAWE,IAE1CgC,GAA4Bd,EAAAA,EAAAA,cAChC,eAACC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAYH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAAxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BuD,GAAM,IACT3B,IAAK+B,EACLQ,KAAM,eACN,eAAe,EACf/E,SAAUmE,EAAOnE,UAAY,KAAG,GAElC,IAEF,MAAO,CACL6C,aAAcA,EACdC,YAAaA,EACbE,aAAcA,EACdD,aAAcA,EACdgB,YAAaA,EACbkB,QAAS,kBAAMjB,GAAS,EAAK,EAC7BkB,OAAQ,kBAAMlB,GAAS,EAAM,EAC7BP,gBAAAA,EACAC,mBAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAtC,GAAAA,EACAgC,QAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAP,UAAAA,EACAgB,iBAAAA,EACAY,qBAAAA,EACAC,aAAAA,EACAJ,cAAAA,EACAM,0BAAAA,EAEJ,CASQG,EALaC,EAAAA,EAAAA,GAAiB7C,IAEhCuC,EAAYnC,EAAZmC,aAEGO,GADS1C,EAAZM,WACUC,EAAAA,EAAAA,GAAAP,EAAAjB,IAEN4D,GAAYC,EAAAA,EAAAA,IAAG,sBAAuBhD,EAAM+C,WAClD,OAAuBE,EAAAA,EAAAA,KAAIrD,EAAqB,CAAE1B,MAAO4E,EAASrF,UAA0BwF,EAAAA,EAAAA,KAAI1D,EAA2B,CAAErB,MAAOgC,EAAQzC,UAA0BwF,EAAAA,EAAAA,KACpKC,EAAAA,EAAAA,KAAU7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAELkE,EAAa,CAAC,EAAGtC,IAAI,IACxB8C,UAAAA,EACAI,MAAOjD,EAAkB,gBAG/B,IAEFJ,EAAYsD,YAAc,eACHrD,EAAAA,EAAAA,IACrB,SAAyBC,EAAOC,GAC9B,IAAMoD,EAAQxD,IACRK,EAASV,IACTuD,GAAYC,EAAAA,EAAAA,IAAG,2BAA4BhD,EAAM+C,WACvD,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAAU7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEA,OAALgF,QAAK,IAALA,OAAK,EAALA,EAAO3B,iBAAiB1B,EAAOC,IAAI,IACtCkD,MAAOjD,EAAOoD,WACdP,UAAAA,IAGN,IAEaK,YAAc,gB,sHC/J7B,SAASG,IAAwB,QAAAC,EAAA3B,UAAAC,OAAL2B,EAAG,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAHF,EAAGE,GAAA9B,UAAA8B,GAC7B,OAAO,SAAcC,GACnBH,EAAII,MAAK,SAACC,GAER,OADE,OAAFA,QAAE,IAAFA,GAAAA,EAAKF,GACO,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOG,gBAChB,GACF,CACF,C,cCZa7E,EAAA,qDAAAC,EAAA,8GAIb,SAAS6E,EAAehE,GACtB,IAAAiE,EAWF,SAA6BjE,GAAO,IAAAkE,EAAAC,EAAAC,EAC5Bf,GAAQxD,EAAAA,EAAAA,MAEZd,EAWEiB,EAXFjB,GACAsF,EAUErE,EAVFqE,SACAC,EASEtE,EATFsE,SACAC,EAQEvE,EARFuE,SACAjE,EAOEN,EAPFM,WACAC,EAMEP,EANFO,UACAE,EAKET,EALFS,WACAD,EAIER,EAJFQ,WACAkC,EAGE1C,EAHF0C,QACAC,EAEE3C,EAFF2C,OACG6B,GAAI7D,EAAAA,EAAAA,GACLX,EAAKb,GACHsF,EAAWzE,EAAM,oBAAsB,CAACA,EAAM,qBAAuB,GAClE,OAALqD,QAAK,IAALA,GAAAA,EAAOnC,iBAAwB,OAALmC,QAAK,IAALA,GAAAA,EAAO9C,WACnCkE,EAASC,KAAKrB,EAAMrC,YAEb,OAALqC,QAAK,IAALA,GAAAA,EAAOjC,aACTqD,EAASC,KAAKrB,EAAMpC,YAEtB,OAAA5C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKmG,GAAI,IACP,mBAAoBC,EAASE,KAAK,WAAQ,EAC1C5F,GAAM,OAAFA,QAAE,IAAFA,EAAAA,EAAW,OAALsE,QAAK,IAALA,OAAK,EAALA,EAAOtE,GACjByB,WAAkC,QAAxB0D,EAAU,OAARG,QAAQ,IAARA,EAAAA,EAAY7D,SAAU,IAAA0D,EAAAA,EAAS,OAALb,QAAK,IAALA,OAAK,EAALA,EAAO7C,WAC7CC,WAAkC,QAAxB0D,EAAU,OAARG,QAAQ,IAARA,EAAAA,EAAY7D,SAAU,IAAA0D,EAAAA,EAAS,OAALd,QAAK,IAALA,OAAK,EAALA,EAAO5C,WAC7CH,WAAkC,QAAxB8D,EAAU,OAARG,QAAQ,IAARA,EAAAA,EAAYjE,SAAU,IAAA8D,EAAAA,EAAS,OAALf,QAAK,IAALA,OAAK,EAALA,EAAO/C,WAC7CC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAkB,OAAL8C,QAAK,IAALA,OAAK,EAALA,EAAO9C,UAC/BmC,QAASa,EAAqB,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOX,QAASA,GACzCC,OAAQY,EAAqB,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOV,OAAQA,IAE3C,CA5CqEiC,CAAoB5E,GAA/EQ,EAAUyD,EAAVzD,WAAYD,EAAS0D,EAAT1D,UAAWE,EAAUwD,EAAVxD,WAAYH,EAAU2D,EAAV3D,WAAekE,GAAI7D,EAAAA,EAAAA,GAAAsD,EAAA/E,GAC9D,OAAAb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKmG,GAAI,IACPH,SAAU7D,EACV8D,SAAU7D,EACV8D,SAAUjE,EACV,gBAAgBuE,EAAAA,EAAAA,GAAStE,GACzB,iBAAiBsE,EAAAA,EAAAA,GAASvE,GAC1B,iBAAiBuE,EAAAA,EAAAA,GAASpE,IAE9B,C,kCCfavB,EAAA,aASPlB,GAAQ+B,EAAAA,EAAAA,IACZ,SAAgBC,EAAOC,GACrB,IAAQ6E,EAAsB9E,EAAtB8E,SAAaN,GAAI7D,EAAAA,EAAAA,GAAKX,EAAKd,GAC7BgB,GAASC,EAAAA,EAAAA,GAAoB,QAASqE,GAEtCO,EAAQf,GADGnB,EAAAA,EAAAA,GAAiB2B,IAE5BQ,GAAahC,EAAAA,EAAAA,IAAG,eAAgBhD,EAAM+C,WAC5C,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,OAAY7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEVP,KAAMgH,GACHC,GAAK,IACR5B,MAAOjD,EAAOmD,MACdpD,IAAAA,EACA8C,UAAWiC,IAGjB,IAEFhH,EAAMoF,YAAc,QACpBpF,EAAMe,GAAK,O","sources":["components/redux/contacts/selectorContacts.js","components/pages/ContactsPage.jsx","../node_modules/@chakra-ui/react/dist/esm/form-control/form-control.mjs","../node_modules/@chakra-ui/utils/dist/esm/call-all.mjs","../node_modules/@chakra-ui/react/dist/esm/form-control/use-form-control.mjs","../node_modules/@chakra-ui/react/dist/esm/input/input.mjs"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Heading, Input, Button, Text } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectorContacts';\nimport {\n  addContact,\n  fetchContacts,\n  deleteContact,\n} from '../redux/contacts/operationsContacts';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  const [newContact, setNewContact] = useState({ name: '', number: '' });\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = () => {\n    if (!newContact.name || !newContact.number) {\n      setErrorMessage('Please enter both name and number.');\n      return;\n    }\n    dispatch(addContact(newContact));\n    setNewContact({ name: '', number: '' });\n    setErrorMessage('');\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  if (isLoading) {\n    return <p>Loading contacts...</p>;\n  }\n  if (error) {\n    return <p>Error loading contacts: {error}</p>;\n  }\n\n  return (\n    <Box>\n      <Heading as=\"h1\" size=\"xl\" mb={6}>\n        Contacts\n      </Heading>\n      <Box mb={6}>\n        <Input\n          placeholder=\"Name\"\n          value={newContact.name}\n          onChange={e => setNewContact({ ...newContact, name: e.target.value })}\n          mb={2}\n        />\n        <Input\n          placeholder=\"Number\"\n          value={newContact.number}\n          onChange={e =>\n            setNewContact({ ...newContact, number: e.target.value })\n          }\n          mb={2}\n        />\n        <Button onClick={handleAddContact} colorScheme=\"blue\">\n          Add Contact\n        </Button>\n        {errorMessage && <Text color=\"red.500\">{errorMessage}</Text>}\n      </Box>\n      <ul>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button\n              onClick={() => handleDeleteContact(contact.id)}\n              ml={4}\n              colorScheme=\"red\"\n            >\n              Delete\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeRefs } from '@chakra-ui/hooks';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx, dataAttr } from '@chakra-ui/utils';\nimport { useId, useState, useCallback } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nconst [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly)\n    }),\n    [htmlProps, isDisabled, isFocused, isInvalid, isReadOnly]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nconst FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nconst FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field?.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport { FormControl, FormHelperText, useFormControlContext, useFormControlStyles };\n","function callAll(...fns) {\n  return function mergedFn(...args) {\n    fns.forEach((fn) => fn?.(...args));\n  };\n}\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn?.(event);\n      return event?.defaultPrevented;\n    });\n  };\n}\n\nexport { callAll, callAllHandlers };\n","'use client';\nimport { ariaAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useFormControlContext } from './form-control.mjs';\n\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur)\n  };\n}\n\nexport { useFormControl, useFormControlProps };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { useFormControl } from '../form-control/use-form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Input = forwardRef(\n  function Input2(props, ref) {\n    const { htmlSize, ...rest } = props;\n    const styles = useMultiStyleConfig(\"Input\", rest);\n    const ownProps = omitThemingProps(rest);\n    const input = useFormControl(ownProps);\n    const _className = cx(\"chakra-input\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.input,\n      {\n        size: htmlSize,\n        ...input,\n        __css: styles.field,\n        ref,\n        className: _className\n      }\n    );\n  }\n);\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport { Input };\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","dispatch","useDispatch","useSelector","_useState","useState","name","number","_useState2","_slicedToArray","newContact","setNewContact","_useState3","_useState4","errorMessage","setErrorMessage","useEffect","fetchContacts","_jsx","children","_jsxs","Box","Heading","as","size","mb","Input","placeholder","value","onChange","e","_objectSpread","target","Button","onClick","addContact","colorScheme","Text","color","map","contact","id","deleteContact","ml","_excluded","_excluded2","_createContext","createContext","_createContext2","FormControlStylesProvider","useFormControlStyles","_createContext3","strict","_createContext4","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","_useFormControlProvid","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","_objectWithoutProperties","uuid","useId","concat","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","_useState5","_useState6","isFocused","setFocus","getHelpTextProps","useCallback","props2","arguments","length","undefined","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","callAllHandlers","_len3","fns","Array","_key3","event","some","fn","defaultPrevented","useFormControl","_useFormControlProps","_ref","_ref2","_ref3","disabled","readOnly","required","rest","labelIds","push","join","useFormControlProps","ariaAttr","htmlSize","input","_className"],"sourceRoot":""}